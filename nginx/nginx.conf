# 运行用户
user www-data;
# 启动进程，通常设置和cpu数量相等
worker_processes 2;
pid /run/nginx.pid;
daemon off;
# 全局错误日志及PID文件
# error_log  logs/error.log;
# error_log  logs/error.log  notice;
# error_log  logs/error.log  info;

#工作模式及连接数上限
events {
  # epoll是多路复用IO(I/O Multiplexing)中的一种方式,
  # 仅用于linux2.6以上内核,可以大大提高nginx的性能
  use  epoll;
  # 单个后台worker process进程的最大并发链接数 
  worker_connections  2048;
  # 并发总数是 worker_processes 和 worker_connections 的乘积
  # 即 max_clients = worker_processes * worker_connections
  # 在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  为什么
  # 为什么上面反向代理要除以4，应该说是一个经验值
  # 根据以上条件，正常情况下的Nginx Server可以应付的最大连接数为：4 * 8000 = 32000
  # worker_connections 值的设置跟物理内存大小有关
  # 因为并发受IO约束，max_clients的值须小于系统可以打开的最大文件数
  # 而系统可以打开的最大文件数和内存大小成正比，一般1GB内存的机器上可以打开的文件数大约是10万左右
  # 我们来看看360M内存的VPS可以打开的文件句柄数是多少：
  # $ cat /proc/sys/fs/file-max
  # 输出 34336
  # 32000 < 34336，即并发连接总数小于系统可以打开的文件句柄总数，这样就在操作系统可以承受的范围之内
  # 所以，worker_connections 的值需根据 worker_processes 进程数目和系统可以打开的最大文件总数进行适当地进行设置
  # 使得并发总数小于操作系统可以打开的最大文件数目
  # 其实质也就是根据主机的物理CPU和内存进行配置
  # 当然，理论上的并发总数可能会和实际有所偏差，因为主机还有其他的工作进程需要消耗系统资源。
  # ulimit -SHn 65535
  multi_accept on;
}

http {
  server_tokens off;
  # sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
  # 对于普通应用，必须设为 on,
  # 如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
  # 以平衡磁盘与网络I/O处理速度，降低系统的uptime.
  sendfile on;
  tcp_nopush on;'
  tcp_nodelay on;
  # 连接超时时间
  keepalive_timeout 15;
  types_hash_max_size 2048;
  client_max_body_size 20M;
  # 设定mime类型,类型由mime.type文件定义
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /dev/stdout;
  error_log /dev/stderr;
  #开启gzip压缩
  gzip on;
  gzip_disable "msie6";
  
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  
  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-available/*.conf;
  open_file_cache off; # Disabled for issue 619
  charset UTF-8;
}
